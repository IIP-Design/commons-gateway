service: commons-gateway

frameworkVersion: "3"

plugins:
  - serverless-deployment-bucket

provider:
  name: aws
  deploymentBucket:
    name: gpalab-automatic-deployments-${env:DEPLOYMENT_TYPE}

package:
  individually: true
  patterns:
    - "!./**"

functions:
  adminCreate:
    name: gateway-${opt:stage}-admin-create
    handler: bin/admin-create
    description: Add an new email to the list of admin users.
    runtime: go1.x
    events:
      - http:
          path: /admin/create
          method: post
          cors:
            origin: ${file(./config/${env:DEPLOYMENT_TYPE}.json):cors.allowedOrigins}
    package:
      patterns:
        - "./bin/admin-create"
  adminsGet:
    name: gateway-${opt:stage}-admins-get
    handler: bin/admins-get
    description: Retrieve the list of admin users.
    runtime: go1.x
    events:
      - http:
          path: /admins
          method: get
          cors:
            origin: ${file(./config/${env:DEPLOYMENT_TYPE}.json):cors.allowedOrigins}
    package:
      patterns:
        - "./bin/admins-get"
  guestAuth:
    name: gateway-${opt:stage}-guest-auth
    handler: bin/guest-auth
    description: Authenticate a guest user.
    runtime: go1.x
    events:
      - http:
          path: /guest/auth
          method: post
          cors:
            origin: ${file(./config/${env:DEPLOYMENT_TYPE}.json):cors.allowedOrigins}
    package:
      patterns:
        - "./bin/guest-auth"
  guestsGet:
    name: gateway-${opt:stage}-guests-get
    handler: bin/guests-get
    description: Retrieve a list of guest users.
    runtime: go1.x
    events:
      - http:
          path: /guests
          method: post
          cors:
            origin: ${file(./config/${env:DEPLOYMENT_TYPE}.json):cors.allowedOrigins}
    package:
      patterns:
        - "./bin/guests-get"
  teamCreate:
    name: gateway-${opt:stage}-team-create
    handler: bin/team-create
    description: Create a new team.
    runtime: go1.x
    events:
      - http:
          path: /team/create
          method: post
          cors:
            origin: ${file(./config/${env:DEPLOYMENT_TYPE}.json):cors.allowedOrigins}
    package:
      patterns:
        - "./bin/team-create"
  teamsGet:
    name: gateway-${opt:stage}-teams-get
    handler: bin/teams-get
    description: Retrieve the list of teams.
    runtime: go1.x
    events:
      - http:
          path: /teams
          method: get
          cors:
            origin: ${file(./config/${env:DEPLOYMENT_TYPE}.json):cors.allowedOrigins}
    package:
      patterns:
        - "./bin/teams-get"
  credsSalt:
    name: gateway-${opt:stage}-creds-retrieve
    handler: bin/creds-salt
    description: Retrieve a users hashing salt.
    runtime: go1.x
    events:
      - http:
          path: /creds/salt
          method: post
          cors:
            origin: ${file(./config/${env:DEPLOYMENT_TYPE}.json):cors.allowedOrigins}
    package:
      patterns:
        - "./bin/creds-salt"
  credsProvision:
    name: gateway-${opt:stage}-creds-provision
    handler: bin/creds-provision
    description: Records a guest user invitation and generates credentials for this user.
    runtime: go1.x
    events:
      - http:
          path: /creds/provision
          method: post
          cors:
            origin: ${file(./config/${env:DEPLOYMENT_TYPE}.json):cors.allowedOrigins}
    package:
      patterns:
        - "./bin/creds-provision"
  email2fa:
    name: gateway-${opt:stage}-email-2fa
    handler: funcs/email-2fa/dist/index.handler
    description: Email an invitee their temporary verification code.
    runtime: nodejs18.x
    events:
      - sqs: arn:aws:sqs:us-east-1:601587284985:contentCommons-email-2fa
    package:
      patterns:
        - "funcs/email-2fa/dist/index.cjs"
  emailCreds:
    name: gateway-${opt:stage}-email-creds
    handler: funcs/email-creds/dist/index.handler
    description: Email an invitee their temporary credentials.
    runtime: nodejs18.x
    events:
      - sqs: arn:aws:sqs:us-east-1:601587284985:contentCommons-email-creds
    package:
      patterns:
        - "funcs/email-creds/dist/index.cjs"
  emailSupportStaff:
    name: gateway-${opt:stage}-email-support-staff
    handler: funcs/email-support-staff/index.handler
    description: Email a Content Commons user an update on requested support staff.
    runtime: nodejs18.x
    events:
      - sqs: arn:aws:sqs:us-east-1:601587284985:contentCommons-email-support-staff
    package:
      patterns:
        - "funcs/email-support-staff/dist/index.cjs"
