---
import Button from '../components/Button.astro';
import PartnerPageLayout from '../layouts/PartnerPageLayout.astro';
import PageContainer from '../layouts/PageContainer.astro';

import '../styles/form.scss';

const title = 'Update Password';
const desc = "Because this is your first login with this invite, you must update your password"
---

<script>
  import zxcvbn from "zxcvbn";

  import { showError, showSuccess, showWarning } from "../utils/alert";
  import { getUserPasswordSalt } from "../utils/login";
  import currentUser, { loginStatus } from "../stores/current-user";
import { derivePasswordHash } from "../utils/hashing";
import { buildQuery } from "../utils/api";

  const submit = async () => {
    const user = currentUser.get();
    const email = user.email || '';
    const role = user.role || '';

    const currPassElem = document.getElementById('current-password-input') as HTMLInputElement;
    const newPassElem = document.getElementById('new-password-input') as HTMLInputElement;

    const currPassword = currPassElem.value;
    const newPassword = newPassElem.value;

    if( !currPassword ) {
      showWarning('Please input your current password');
      return;
    } else if( !newPassword ) {
      showWarning('Please input a new password');
      return;
    } else if( currPassword === newPassword ) {
      showWarning('Your new password must not be the same as your current password');
      return;
    } else if( newPassword.length < 12 ) {
      showWarning('Your new password must be at least 12 characters long');
      return;
    }

    const passResult = zxcvbn(newPassword, [email, role].filter(Boolean));
    if( passResult.score < 3 ) {
      const { warning, suggestions } = passResult.feedback;
      const warnText = `${warning}${warning ? "." : ""}`;
      const suggestText = suggestions.map( ( s, idx ) => `(${idx+1}) ${s}` ).join(' ');
      const text = `${warnText}${suggestText ? " Suggestions: " : ""}${suggestText}`
      showWarning(text, "Password too weak");
      return;
    }

    try {
      const [salt] = await getUserPasswordSalt( email );
      const currentPasswordHash = await derivePasswordHash( currPassword, salt );

      const body = {
        currentPasswordHash,
        newPassword,
        email,
      }

      const { ok } = await buildQuery( "guest/password", body, 'POST' );
      if( ok ) {
        loginStatus.set( 'loggedIn' );
        showSuccess('Password successfully updated')
          .then( () => window.location.replace( "/partner-login" ) );
      } else {
        showError('Unable to update password');
      }
    } catch( err ) {
      console.log( err );
    }

  };

  document.getElementById('submit-btn')?.addEventListener( 'click', submit );
</script>

<PartnerPageLayout title={title}>
  <PageContainer narrow title={title}>
      {desc && <p class="description">{desc}</p>}
      <div class="field-group" style="margin-top: 1em;">
        <label>
          <span>Current Password</span>
          <input
            id="current-password-input"
            type="text"
            required
          />
        </label>
        <label>
          <span>New Password</span>
          <input
            id="new-password-input"
            type="text"
            required
          />
        </label>
      </div>
      <Button id="submit-btn" type="submit">Submit</Button>
  </PageContainer>
</PartnerPageLayout>
