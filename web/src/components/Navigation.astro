---
import { routes } from '../utils/routes';

const { pathname } = new URL(Astro.request.url);
const currentPath = pathname.replaceAll('/', '');
const capitalized = (word: string) => word.charAt(0).toUpperCase() + word.slice(1);
---

<script>
  import currentUser from '../stores/current-user';
  import { logout } from '../utils/login';

  const userRole = currentUser.get().role;

  const navList = document.getElementsByClassName('nav-li');

  for (const entry of navList) {
    const roleData = entry.getAttribute('data-roles');
    if (roleData) {
      const roles = roleData.split('-');
      if (userRole && !roles.includes(userRole)) {
        (entry as HTMLElement).style.display = 'none';
      }
    }
  }

  const signOutBtn = document.getElementById('sign-out-hamburger');
  signOutBtn?.addEventListener('click', logout);
</script>

<nav class="nav-links">
  <ul id="nav-list">
    {
      routes.map(({ href, name, rolesAccessible }) => {
        return (
          <li class="nav-li" data-roles={rolesAccessible?.join('-') || ''}>
            <a class={`${currentPath === href ? 'active' : ''} filterable-link`} href={`/${href}`}>
              {name || capitalized(href)}
            </a>
          </li>
        );
      })
    }
    <li class="sign-out">
      <button id="sign-out-hamburger" type="button">Sign Out</button>
    </li>
  </ul>
</nav>

<style lang="scss">
  @use '../styles/breakpoints.scss' as *;

  .nav-links {
    width: 100%;
    top: 5rem;
    left: 48px;
    background-color: var(--iron);
    display: none;
    margin: 0;

    a,
    a:visited {
      padding: 0.5rem;
      text-decoration: none;
      font-size: 1rem;
      font-weight: bold;
      text-transform: uppercase;
      color: var(--blue);
      border-bottom: solid 3px transparent;
    }

    a.active {
      border-bottom: solid 3px var(--hot-toddy);
    }

    a:hover,
    a:focus {
      border-bottom: solid 3px var(--blue);
    }

    ul {
      display: flex;
      padding-inline-start: 0;
      margin: 0;
      list-style: none;
    }

    li {
      margin: 0.5rem 0;
    }
  }

  .expanded {
    display: block;

    > ul {
      flex-direction: column;
      align-items: center;
    }
  }

  .sign-out {
    display: block;

    > button {
      background: none;
      border: none;
      text-decoration: none;
      font-size: 1rem;
      font-weight: bold;
      text-transform: uppercase;
      color: var(--blue);
    }
  }

  @include breakpoint('tablet') {
    .nav-links {
      margin-left: 5rem; // To line up with content container
      display: block;
      position: static;
      width: auto;
      background: none;
    }

    .nav-links li {
      display: inline-block;
      padding: 1rem 0 0.5rem;

      &:not(:last-of-type) {
        margin-right: 2rem;
      }
    }

    li.sign-out {
      display: none;
    }
  }
</style>
